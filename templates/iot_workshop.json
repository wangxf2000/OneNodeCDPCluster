{
  "cdhVersion": "7.1.4.0",
  "cmVersion": "7.1.4",
  "displayName": "SingleNodeCluster",
  "hostTemplates": [
    {
      "cardinality": 1,
      "refName": "HostTemplate-0-from-YourHostname",
      "roleConfigGroupsRefNames": [
        "atlas-ATLAS_SERVER-BASE",
        "flink-FLINK_HISTORY_SERVER-BASE", 
        "cdsw-CDSW_APPLICATION-BASE",
        "cdsw-CDSW_DOCKER-BASE",
        "cdsw-CDSW_MASTER-BASE",
        "hbase-MASTER-BASE",
        "hbase-REGIONSERVER-BASE",
        "hdfs-BALANCER-BASE",
        "hdfs-DATANODE-BASE",
        "hdfs-NAMENODE-BASE",
        "hdfs-SECONDARYNAMENODE-BASE",
        "hive-GATEWAY-BASE",
        "hive-HIVEMETASTORE-BASE",
        "hive_on_tez-HIVESERVER2-BASE",
        "hue-HUE_LOAD_BALANCER-BASE",
        "hue-HUE_SERVER-BASE",
        "impala-CATALOGSERVER-BASE",
        "impala-IMPALAD-BASE",
        "impala-STATESTORE-BASE",
        "kafka-KAFKA_BROKER-BASE",
        "kudu-KUDU_MASTER-BASE",
        "kudu-KUDU_TSERVER-BASE",
        "livy-LIVY_SERVER-BASE",
        "nifi-NIFI_NODE-BASE", 
        "nifiregistry-NIFI_REGISTRY_SERVER-BASE", 
        "oozie-OOZIE_SERVER-BASE",
        "queuemanager-QUEUEMANAGER_STORE-BASE", 
        "queuemanager-QUEUEMANAGER_WEBAPP-BASE", 
        "phoenix-PHOENIX_QUERY_SERVER-BASE",
        "ranger-RANGER_ADMIN-BASE",
        "ranger-RANGER_TAGSYNC-BASE",
        "ranger-RANGER_USERSYNC-BASE",
        "schemaregistry-SCHEMA_REGISTRY_SERVER-BASE", 
        "solr-SOLR_SERVER-BASE",
        "spark_on_yarn-GATEWAY-BASE",
        "spark_on_yarn-SPARK_YARN_HISTORY_SERVER-BASE",
        "streams_messaging_manager-STREAMS_MESSAGING_MANAGER_SERVER-BASE", 
        "streams_messaging_manager-STREAMS_MESSAGING_MANAGER_UI-BASE", 
        "tez-GATEWAY-BASE",
        "yarn-JOBHISTORY-BASE",
        "yarn-NODEMANAGER-BASE",
        "yarn-RESOURCEMANAGER-BASE",
        "zeppelin-ZEPPELIN_SERVER-BASE",
        "zookeeper-SERVER-BASE"
      ]
    }
  ],
  "instantiator": {
    "clusterName": "SingleNodeCluster",
    "hosts": [
      {
        "hostName": "YourHostname",
        "hostTemplateRefName": "HostTemplate-0-from-YourHostname"
      }
    ],
    "variables": [
      {
        "name": "kudu-KUDU_MASTER-BASE-fs_data_dirs",
        "value": "/kudu/mdir"
      },
      {
        "name": "kudu-KUDU_MASTER-BASE-fs_wal_dir",
        "value": "/kudu/mwal"
      },
      {
        "name": "kudu-KUDU_TSERVER-BASE-fs_data_dirs",
        "value": "/kudu/tdir"
      },
      {
        "name": "kudu-KUDU_TSERVER-BASE-fs_wal_dir",
        "value": "/kudu/twal"
      },
      {
        "name": "atlas-ATLAS_SERVER-BASE-atlas_admin_password",
        "value": "BadPass#1"
      },
      {
        "name": "hive-hive_metastore_database_host",
        "value": "YourHostname"
      },
      {
        "name": "hive-hive_metastore_database_password",
        "value": "cloudera"
      },
      {
        "name": "hue-database_host",
        "value": "YourHostname"
      },
      {
        "name": "hue-database_password",
        "value": "cloudera"
      },
      {
        "name": "hue-database_type",
        "value": "mysql"
      },
      {
        "name": "oozie-OOZIE_SERVER-BASE-oozie_database_host",
        "value": "YourHostname"
      },
      {
        "name": "oozie-OOZIE_SERVER-BASE-oozie_database_password",
        "value": "cloudera"
      },
      {
        "name": "oozie-OOZIE_SERVER-BASE-oozie_database_type",
        "value": "mysql"
      },
      {
        "name": "oozie-OOZIE_SERVER-BASE-oozie_database_user",
        "value": "oozie"
      },
      {
          "name": "ranger-rangeradmin_database_password",
          "value": "cloudera"
      },
      {
          "name": "ranger-rangeradmin_database_user",
          "value": "ranger"
      },
      {
          "name": "ranger-rangeradmin_ranger_database_host",
          "value": "127.0.0.1"
      },
      {
         "name":"ranger-keyadmin_user_password",
         "value":"BadPass#1"
      },
      {
         "name":"ranger-rangeradmin_user_password",
         "value":"BadPass#1"
      },
      {
         "name":"ranger-rangertagsync_user_password",
         "value":"BadPass#1"
      },
      {
         "name":"ranger-rangerusersync_user_password",
         "value":"BadPass#1"
      },
      {
          "name": "schemaregistry-database_host", 
          "value": "YourHostname"
      }, 
      {
          "name": "schemaregistry-database_name", 
          "value": "registry"
      }, 
      {
          "name": "schemaregistry-database_password", 
          "value": "<changeme>"
      }, 
      {
          "name": "schemaregistry-database_user", 
          "value": "registry"
      }, 
      {
          "name": "streams_messaging_manager-smm_database_host", 
          "value": "YourHostname"
      }, 
      {
          "name": "streams_messaging_manager-smm_database_password", 
          "value": "<changeme>"
      }
    ]
  },
  "products": [
      {
          "product": "FLINK", 
          "version": "1.10.0-csa1.2.0.0-cdh7.1.1.0-565-3525501"
      }, 
      {
          "product": "CDSW", 
          "version": "1.8.0.p1.4968660"
      }, 
      {
          "product": "CDH", 
          "version": "7.1.4-1.cdh7.1.4.p0.6300266"
      }, 
      {
          "product": "CFM", 
          "version": "2.0.1.0-71"
      }, 
      {
          "product": "Anaconda", 
          "version": "5.3.1"
      }
  ], 
  "repositories": [
    "https://archive.cloudera.com/cdh7/7.1.4.0/parcels/",
    "https://archive.cloudera.com/p/CFM/centos7/2.x/updates/2.0.1.0/tars/parcel/",
    "https://archive.cloudera.com/p/cdsw1/1.8.0/parcels/",
    "https://archive.cloudera.com/p/csa/1.2.0.0/parcels/",
    "https://repo.continuum.io/pkgs/misc/parcels/archive/"
  ],
  "services": [
    {
      "refName": "zookeeper",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "zookeeper-SERVER-BASE",
          "roleType": "SERVER"
        }
      ],
      "serviceType": "ZOOKEEPER"
    },
    {
      "refName": "oozie",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "oozie_database_user",
              "variable": "oozie-OOZIE_SERVER-BASE-oozie_database_user"
            },
            {
              "name": "oozie_database_host",
              "variable": "oozie-OOZIE_SERVER-BASE-oozie_database_host"
            },
            {
              "name": "oozie_database_type",
              "variable": "oozie-OOZIE_SERVER-BASE-oozie_database_type"
            },
            {
              "name": "oozie_database_password",
              "variable": "oozie-OOZIE_SERVER-BASE-oozie_database_password"
            }
          ],
          "refName": "oozie-OOZIE_SERVER-BASE",
          "roleType": "OOZIE_SERVER"
        }
      ],
      "serviceType": "OOZIE"
    },
    {
         "refName":"ranger",
         "roleConfigGroups":[
            {
               "base":true,
               "refName":"ranger-RANGER_USERSYNC-BASE",
               "roleType":"RANGER_USERSYNC"
            },
            {
               "base":true,
               "refName":"ranger-RANGER_TAGSYNC-BASE",
               "roleType":"RANGER_TAGSYNC"
            },
            {
               "base":true,
               "refName":"ranger-RANGER_ADMIN-BASE",
               "roleType":"RANGER_ADMIN"
            }
         ],
         "serviceConfigs":[
                {
                    "name": "rangeradmin_user_password",
                    "variable": "ranger-rangeradmin_user_password"
                },
                {
                    "name": "rangertagsync_user_password",
                    "variable": "ranger-rangertagsync_user_password"
                },
                {
                    "name": "rangerusersync_user_password",
                    "variable": "ranger-rangerusersync_user_password"
                },
                {
                      "name" : "ranger_database_host",
                      "variable" : "ranger-rangeradmin_ranger_database_host"
                },
                {
                      "name" : "ranger_database_user",
                      "variable" : "ranger-rangeradmin_database_user"
                },
                {
                       "name": "ranger_database_password",
                       "variable": "ranger-rangeradmin_database_password"
                },                  
                {
                    "name": "keyadmin_user_password",
                    "variable": "ranger-keyadmin_user_password"
                }
         ],
         "serviceType":"RANGER"
      },
    {
      "refName": "atlas",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "atlas_authentication_method_file",
              "value": "true"
            },
            {
              "name": "atlas_admin_password",
              "variable": "atlas-ATLAS_SERVER-BASE-atlas_admin_password"
            }
          ],
          "refName": "atlas-ATLAS_SERVER-BASE",
          "roleType": "ATLAS_SERVER"
        }
      ],
      "serviceType": "ATLAS"
    },
    {
      "refName": "tez",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "tez-GATEWAY-BASE",
          "roleType": "GATEWAY"
        }
      ],
      "serviceType": "TEZ"
    },
    {
      "refName": "hive_on_tez",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "hive_on_tez-HIVESERVER2-BASE",
          "roleType": "HIVESERVER2"
        }
      ],
      "serviceType": "HIVE_ON_TEZ"
    },
    {
      "refName": "solr",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "solr-SOLR_SERVER-BASE",
          "roleType": "SOLR_SERVER"
        }
      ],
      "serviceType": "SOLR"
    },
    {
      "refName": "kafka",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "broker_max_heap_size",
              "value": "512"
            }
          ],
          "refName": "kafka-KAFKA_BROKER-BASE",
          "roleType": "KAFKA_BROKER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "offsets.topic.replication.factor",
          "value": "1"
        },
        {
          "name": "producer.metrics.enable",
          "value": "true"
        }
      ],
      "serviceType": "KAFKA"
    },
    {
      "refName": "hue",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "hue-HUE_SERVER-BASE",
          "roleType": "HUE_SERVER"
        },
        {
          "base": true,
          "refName": "hue-HUE_LOAD_BALANCER-BASE",
          "roleType": "HUE_LOAD_BALANCER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "database_type",
          "variable": "hue-database_type"
        },
        {
          "name": "database_password",
          "variable": "hue-database_password"
        },
        {
          "name": "database_host",
          "variable": "hue-database_host"
        },
        {
          "name": "impala_service",
          "ref": "impala"
        }
      ],
      "serviceType": "HUE"
    },
    {
      "refName": "spark_on_yarn",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "spark_on_yarn-SPARK_YARN_HISTORY_SERVER-BASE",
          "roleType": "SPARK_YARN_HISTORY_SERVER"
        },
        {
          "base": true,
          "refName": "spark_on_yarn-GATEWAY-BASE",
          "roleType": "GATEWAY"
        }
      ],
      "serviceType": "SPARK_ON_YARN"
    },
    {
      "refName": "hdfs",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "hdfs-NAMENODE-BASE",
          "roleType": "NAMENODE"
        },
        {
          "base": true,
          "refName": "hdfs-SECONDARYNAMENODE-BASE",
          "roleType": "SECONDARYNAMENODE"
        },
        {
          "base": true,
          "refName": "hdfs-DATANODE-BASE",
          "roleType": "DATANODE"
        },
        {
          "base": true,
          "refName": "hdfs-BALANCER-BASE",
          "roleType": "BALANCER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "dfs_replication",
          "value": "1"
        },
        {
          "name": "hdfs_verify_ec_with_topology_enabled",
          "value": "false"
        },
        {
          "name": "hdfs_under_replicated_blocks_thresholds",
          "value": "{\"warning\":\"never\",\"critical\":\"never\"}"
        }
      ],
      "serviceType": "HDFS"
    },
    {
      "refName": "yarn",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "yarn_scheduler_maximum_allocation_mb",
              "value": "6144"
            }
          ],
          "refName": "yarn-RESOURCEMANAGER-BASE",
          "roleType": "RESOURCEMANAGER"
        },
        {
          "base": true,
          "configs": [
            {
              "name": "yarn_nodemanager_resource_memory_mb",
              "value": "6144"
            }
          ],
          "refName": "yarn-NODEMANAGER-BASE",
          "roleType": "NODEMANAGER"
        },
        {
          "base": true,
          "refName": "yarn-JOBHISTORY-BASE",
          "roleType": "JOBHISTORY"
        }
      ],
      "serviceConfigs": [
           {
               "name": "queuemanager_service", 
               "ref": "queuemanager"
           }
       ], 
      "serviceType": "YARN"
    },
    {
      "refName": "hbase",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "hbase_regionserver_java_heapsize",
              "value": "524288000"
            }
          ],
          "refName": "hbase-REGIONSERVER-BASE",
          "roleType": "REGIONSERVER"
        },
        {
          "base": true,
          "configs": [
            {
              "name": "hbase_master_java_heapsize",
              "value": "524288000"
            }
          ],
          "refName": "hbase-MASTER-BASE",
          "roleType": "MASTER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "hbase_service_config_safety_valve",
          "value": "<property>\n<name>hbase.regionserver.wal.codec</name>\n \n<value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>\n</property> \n\n<property>\n<name>hbase.region.server.rpc.scheduler.factory.class</name>\n<value>org.apache.hadoop.hbase.ipc.PhoenixRpcSchedulerFactory</value>\n  <description>Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates</description>\n</property>\n\n<property>\n  <name>hbase.rpc.controllerfactory.class</name>\n<value>org.apache.hadoop.hbase.ipc.controller.ServerRpcControllerFactory</value>\n  <description>Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates</description>\n</property>\n\n<property>\n <name>phoenix.functions.allowUserDefinedFunctions</name>\n <value>true</value>\n <description>enable UDF functions</description>\n</property>"
        },
        {
          "name": "zookeeper_service",
          "ref": "zookeeper"
        },
        {
          "name": "hdfs_service",
          "ref": "hdfs"
        }
      ],
      "serviceType": "HBASE"
    },
    {
      "refName": "hive",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "hive-GATEWAY-BASE",
          "roleType": "GATEWAY"
        },
        {
          "base": true,
          "refName": "hive-HIVEMETASTORE-BASE",
          "roleType": "HIVEMETASTORE"
        }
      ],
      "serviceConfigs": [
        {
          "name": "hive_metastore_database_password",
          "variable": "hive-hive_metastore_database_password"
        },
        {
          "name": "hive_metastore_database_host",
          "variable": "hive-hive_metastore_database_host"
        }
      ],
      "serviceType": "HIVE"
    },
    {
      "refName": "cdsw",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "cdsw-CDSW_APPLICATION-BASE",
          "roleType": "CDSW_APPLICATION"
        },
        {
          "base": true,
          "refName": "cdsw-CDSW_MASTER-BASE",
          "roleType": "CDSW_MASTER"
        },
        {
          "base": true,
          "configs": [
            {
              "name": "cdsw.docker.devices.config",
              "value": "YourDockerDevice"
            }
          ],
          "refName": "cdsw-CDSW_DOCKER-BASE",
          "roleType": "CDSW_DOCKER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "hive_service",
          "ref": "hive"
        },
        {
          "name": "spark_on_yarn_service",
          "ref": "spark_on_yarn"
        },
        {
          "name": "cdsw.domain.config",
          "value": "YourCDSWDomain"
        },
        {
          "name": "yarn_service",
          "ref": "yarn"
        },
        {
          "name": "solr_service",
          "ref": "solr"
        },
        {
          "name": "hbase_service",
          "ref": "hbase"
        },
        {
          "name": "hdfs_service",
          "ref": "hdfs"
        },
        {
          "name": "cdsw.master.ip.config",
          "value": "YourPrivateIP"
        }
      ],
      "serviceType": "CDSW"
    },
    {
        "refName": "queuemanager", 
        "roleConfigGroups": [
            {
                "base": true, 
                "refName": "queuemanager-QUEUEMANAGER_STORE-BASE", 
                "roleType": "QUEUEMANAGER_STORE"
            }, 
            {
                "base": true, 
                "refName": "queuemanager-QUEUEMANAGER_WEBAPP-BASE", 
                "roleType": "QUEUEMANAGER_WEBAPP"
            }
        ], 
        "serviceConfigs": [
            {
                "name": "zookeeper_service", 
                "ref": "zookeeper"
            }
        ], 
        "serviceType": "QUEUEMANAGER"
    }, 
    {
        "refName": "nifi", 
        "roleConfigGroups": [
            {
                "base": true, 
                "configs": [
                    {
                        "name": "nifi.initial.admin.identity", 
                        "value": "nifi"
                    }
                ], 
                "refName": "nifi-NIFI_NODE-BASE", 
                "roleType": "NIFI_NODE"
            }
        ], 
        "serviceConfigs": [
            {
                "name": "zookeeper_service", 
                "ref": "zookeeper"
            }, 
            {
                "name": "atlas_service", 
                "ref": "atlas"
            }, 
            {
                "name": "ranger_service", 
                "ref": "none"
            }, 
            {
                "name": "knox_service", 
                "ref": "none"
            }, 
            {
                "name": "kafka_service", 
                "ref": "kafka"
            }, 
            {
                "name": "hdfs_service", 
                "ref": "hdfs"
            }
        ], 
        "serviceType": "NIFI"
    }, 
    {
        "refName": "schemaregistry", 
        "roleConfigGroups": [
            {
                "base": true, 
                "refName": "schemaregistry-SCHEMA_REGISTRY_SERVER-BASE", 
                "roleType": "SCHEMA_REGISTRY_SERVER"
            }
        ], 
        "serviceConfigs": [
            {
                "name": "ranger_service", 
                "ref": "ranger"
            }, 
            {
                "name": "hdfs_service", 
                "ref": "hdfs"
            }, 
            {
                "name": "database_host", 
                "variable": "schemaregistry-database_host"
            }, 
            {
                "name": "database_name", 
                "variable": "schemaregistry-database_name"
            }, 
            {
                "name": "database_password", 
                "variable": "schemaregistry-database_password"
            }, 
            {
                "name": "database_user", 
                "variable": "schemaregistry-database_user"
            }
        ], 
        "serviceType": "SCHEMAREGISTRY"
    }, 
    {
        "refName": "streams_messaging_manager", 
        "roleConfigGroups": [
            {
                "base": true, 
                "configs": [
                    {
                        "name": "cm.metrics.service.monitor.host", 
                        "value": "YourHostname"
                    }
                ], 
                "refName": "streams_messaging_manager-STREAMS_MESSAGING_MANAGER_SERVER-BASE", 
                "roleType": "STREAMS_MESSAGING_MANAGER_SERVER"
            }, 
            {
                "base": true, 
                "refName": "streams_messaging_manager-STREAMS_MESSAGING_MANAGER_UI-BASE", 
                "roleType": "STREAMS_MESSAGING_MANAGER_UI"
            }
        ], 
        "serviceConfigs": [
            {
                "name": "smm_database_password", 
                "variable": "streams_messaging_manager-smm_database_password"
            }, 
            {
                "name": "zookeeper_service", 
                "ref": "zookeeper"
            }, 
            {
                "name": "ranger_service", 
                "ref": "ranger"
            }, 
            {
                "name": "kafka_service", 
                "ref": "kafka"
            }, 
            {
                "name": "schemaregistry_service", 
                "ref": "schemaregistry"
            }, 
            {
                "name": "smm_database_host", 
                "variable": "streams_messaging_manager-smm_database_host"
            }
        ], 
        "serviceType": "STREAMS_MESSAGING_MANAGER"
    }, 
    {
      "refName": "kudu",
      "roleConfigGroups": [
        {
          "base": true,
          "configs": [
            {
              "name": "fs_wal_dir",
              "variable": "kudu-KUDU_MASTER-BASE-fs_wal_dir"
            },
            {
              "name": "fs_data_dirs",
              "variable": "kudu-KUDU_MASTER-BASE-fs_data_dirs"
            }
          ],
          "refName": "kudu-KUDU_MASTER-BASE",
          "roleType": "KUDU_MASTER"
        },
        {
          "base": true,
          "configs": [
            {
              "name": "fs_wal_dir",
              "variable": "kudu-KUDU_TSERVER-BASE-fs_wal_dir"
            },
            {
              "name": "fs_data_dirs",
              "variable": "kudu-KUDU_TSERVER-BASE-fs_data_dirs"
            }
          ],
          "refName": "kudu-KUDU_TSERVER-BASE",
          "roleType": "KUDU_TSERVER"
        }
      ],
      "serviceType": "KUDU"
    },
    {
      "refName": "impala",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "impala-IMPALAD-BASE",
          "roleType": "IMPALAD"
        },
        {
          "base": true,
          "refName": "impala-STATESTORE-BASE",
          "roleType": "STATESTORE"
        },
        {
          "base": true,
          "refName": "impala-CATALOGSERVER-BASE",
          "roleType": "CATALOGSERVER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "ranger_service",
          "ref": "ranger"
        },
        {
          "name": "kudu_service",
          "ref": "kudu"
        },
        {
          "name": "hdfs_service",
          "ref": "hdfs"
        },
        {
          "name": "hive_service",
          "ref": "hive"
        },
        {
          "name": "atlas_service",
          "ref": "atlas"
        },
        {
          "name": "hbase_service",
          "ref": "hbase"
        }
      ],
      "serviceType": "IMPALA"
    },
    {
      "refName": "phoenix",
      "roleConfigGroups": [
        {
          "base": true,
          "refName": "phoenix-PHOENIX_QUERY_SERVER-BASE",
          "roleType": "PHOENIX_QUERY_SERVER"
        }
      ],
      "serviceConfigs": [
        {
          "name": "hdfs_service",
          "ref": "hdfs"
        },
        {
          "name": "zookeeper_service",
          "ref": "zookeeper"
        },
        {
          "name": "hbase_service",
          "ref": "hbase"
        }
      ],
      "serviceType": "PHOENIX"
    },
    {
    "refName": "nifiregistry", 
    "roleConfigGroups": [
        {
            "base": true, 
            "configs": [
                {
                    "name": "nifi.registry.initial.admin.identity", 
                    "value": "nifiregistry"
                }
            ], 
            "refName": "nifiregistry-NIFI_REGISTRY_SERVER-BASE", 
            "roleType": "NIFI_REGISTRY_SERVER"
        }
    ], 
    "serviceConfigs": [
        {
            "name": "ranger_service", 
            "ref": "none"
        }, 
        {
            "name": "nifi_service", 
            "ref": "nifi"
        }
    ], 
    "serviceType": "NIFIREGISTRY"
   }, 
   {
       "refName": "livy", 
       "roleConfigGroups": [
           {
               "base": true, 
               "configs": [
                   {
                       "name": "process_auto_restart", 
                       "value": "true"
                   }
               ], 
               "refName": "livy-LIVY_SERVER-BASE", 
               "roleType": "LIVY_SERVER"
           }
       ], 
       "serviceType": "LIVY"
   },   
   {
    "refName": "zeppelin", 
    "roleConfigGroups": [
        {
            "base": true, 
            "refName": "zeppelin-ZEPPELIN_SERVER-BASE", 
            "roleType": "ZEPPELIN_SERVER"
        }
    ], 
    "serviceType": "ZEPPELIN"
   }, 
 
   {
   "refName": "flink", 
   "roleConfigGroups": [
       {
           "base": true, 
           "configs": [
               {
                   "name": "process_auto_restart", 
                   "value": "true"
               }, 
               {
                   "name": "historyserver_web_port", 
                   "value": "8083"
               }
           ], 
           "refName": "flink-FLINK_HISTORY_SERVER-BASE", 
           "roleType": "FLINK_HISTORY_SERVER"
       }
   ], 
   "serviceConfigs": [
       {
           "name": "yarn_service", 
           "ref": "yarn"
       }, 
       {
           "name": "zookeeper_service", 
           "ref": "zookeeper"
       }, 
       {
           "name": "hive_service", 
           "ref": "hive"
       }, 
       {
           "name": "hdfs_service", 
           "ref": "hdfs"
       }
   ], 
   "serviceType": "FLINK"
  }
  ]
}
